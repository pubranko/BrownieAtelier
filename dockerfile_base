FROM ubuntu:22.04

#LABELでメタ情報を入れることができる
LABEL maintainer="BrownieAtelier-base-test"

###########################################
# dockerコマンドより受け取る環境変数
##########################################
ARG NORMAL_USER
ARG NORMAL_PASS
ARG ROOT_PASS
ARG GIT_REMOTE_REPOSITORY
ARG BRANCH

###################
# タイムゾーン設定
###################
ENV TZ Asia/Tokyo
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

############################################################
# インストール
############################################################
# リポジトリ一覧を更新、インストール済みのパッケージ更新
# 必要なアプリをインストール
RUN apt-get update && apt update && apt -y upgrade
RUN apt -y install build-essential libssl-dev wget sudo git software-properties-common

# deb版firefoxをインストールするための設定
RUN add-apt-repository ppa:mozillateam/ppa
RUN echo ' \
Package: firefox* \
Pin: release o=LP-PPA-mozillateam \
Pin-Priority: 1001 \
\
Package: firefox* \
Pin: release o=Ubuntu* \
Pin-Priority: -1 \
' | sudo tee /etc/apt/preferences.d/mozilla-firefox
RUN apt update && apt -y install firefox

# Selenium用にgeckodriverを取得して配置。不要になったダウンロードファイル削除
# RUN wget -P /usr/local/bin/ "https://github.com/mozilla/geckodriver/releases/download/v0.31.0/geckodriver-v0.31.0-linux64.tar.gz"
RUN wget -P /usr/local/bin/ "https://github.com/mozilla/geckodriver/releases/download/v0.33.0/geckodriver-v0.33.0-linux64.tar.gz"
RUN tar -zxvf /usr/local/bin/geckodriver-v0.33.0-linux64.tar.gz -C /usr/local/bin
RUN rm /usr/local/bin/geckodriver-v0.33.0-linux64.tar.gz

# pythonまわりのインストール
# RUN apt -y install python3.9 pipenv
RUN apt -y install python3.10-venv
RUN apt -y install python3-pip
RUN apt -y install python3-selenium
RUN pip install pipenv

# 更新時に使われたが、その後不要となったものの一括削除
# キャッシュされているがインストールされていないdebファイルを削除
# 不要なアプリを削除
RUN apt autoremove
RUN apt autoclean
RUN apt -y remove build-essential libssl-dev

#####################################
# ユーザー設定(root、一般)
#####################################
# rootユーザパスワード
RUN echo 'root:'${ROOT_PASS} | chpasswd
# 新規グループ・一般ユーザーを作成。
RUN groupadd -g 1000 ${NORMAL_USER}
RUN useradd  -g      ${NORMAL_USER} -G sudo -m -s /bin/bash ${NORMAL_USER}
# 一般ユーザパスワード
RUN echo ${NORMAL_USER}':'${NORMAL_PASS} | chpasswd
# 一般ユーザーにsudo権限付与
RUN echo 'Defaults visiblepw' >> /etc/sudoers
RUN echo ${NORMAL_USER}' ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

#############################
# BrownieAtelierインストール
#############################
# アプリ用ディレクトリ作成
WORKDIR /home/${NORMAL_USER}

###############################
# 以下一般ユーザーでの操作
###############################
USER ${NORMAL_USER}
RUN whoami

# git clone (サブモジュールごとクローンする)
RUN git clone --recursive ${GIT_REMOTE_REPOSITORY} -b ${BRANCH}
# リポジトリの所有権でエラーが出ないように例外をコンフィグに登録
RUN git config --global --add safe.directory /home/${NORMAL_USER}/BrownieAtelier

# アプリ内でpython仮想環境構築
# WORKDIR /home/${NORMAL_USER}
# RUN python3 -m venv .venv
# RUN "." .venv/bin/activate
# RUN .venv/bin/pip install --upgrade pip
# RUN .venv/bin/pip install pipenv
# pythonライブラリ系インストール
# RUN /home/${NORMAL_USER}/.venv/bin/pip install -r /home/${NORMAL_USER}/BrownieAtelier/app/requirements.txt

# RUN export PATH="$PATH:/home/${NORMAL_USER}/.local/bin"
# 仮想環境を有効化
# RUN python3 -m pipenv shell
# Pipfile.lockからインストール
WORKDIR /home/${NORMAL_USER}/BrownieAtelier/app
# RUN /home/${NORMAL_USER}/.venv/bin/python -m pipenv sync
RUN python3 -m pipenv sync

# mongoDB接続用ca/pemファイルの格納ディレクトリ作成
RUN mkdir /home/${NORMAL_USER}/mongo-key

ENTRYPOINT []
CMD []
